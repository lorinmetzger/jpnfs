<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>nfs.properties</value>
                <value>chimera.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <description>Database connection pool</description>
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <property name="jdbcUrl" value="${chimera.db.url}"/>
                <property name="username" value="${chimera.db.user}"/>
                <property name="password" value="${chimera.db.password}"/>
                <property name="minimumIdle" value="${chimera.db.pool.min}"/>
                <property name="maximumPoolSize" value="${chimera.db.pool.max}"/>
                <property name="autoCommit" value="true"/>
            </bean>
        </constructor-arg>
    </bean>

    <!--
        Convert protperies with multiple values separated by comma into an array of strings:
        key=value1,value2,value3 : String[] {value1, value2, value3}
    -->
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.lang.String[]"
                       value="org.springframework.beans.propertyeditors.StringArrayPropertyEditor" />
            </map>
        </property>
    </bean>
    <!--
        NFSv4.1 pNFS Data Server manager
    -->
    <bean id="device-manager" class="org.dcache.nfs.v4.DeviceManager">
        <description>Device manager</description>
        <property name="dataservers" value="${mds.devices}" />
    </bean>

    <!--
        FileSystem engine. Currently only Chimera is supported
    -->

     <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
         <property name="dataSource" ref="dataSource" />
         <property name="changeLog" value="${chimera.db.changeset}" />
         <property name="contexts" value="production" />
     </bean>

     <bean id="fileSystem" class="org.dcache.chimera.JdbcFs" depends-on="liquibase">
        <description>Chimera Filesystem</description>
        <constructor-arg ref="dataSource" />
        <constructor-arg value="${chimera.db.dialect}" />
    </bean>

<!--
    <bean id="vfs-intern" class="org.dcache.nfs.vfs.ChimeraVfs">
        <description>Chimera Filesystem</description>
        <constructor-arg ref="fileSystem"/>
    </bean>
-->
    <bean id="vfs-intern" class="org.dcache.nfs.vfs.ReadOnlyDirectoryFileSystem">
        <constructor-arg ref="idmapd"/>
    </bean>

    <bean id="cache-config" class="org.dcache.nfs.vfs.VfsCacheConfig">
	<property name="maxEntries" value="${nfs.attribute-cache.size}" />
	<property name="lifeTime" value="${nfs.attribute-cache.time}" />
	<property name="timeUnit" value="${nfs.attribute-cache.unit}" />
    </bean>

    <bean id="vfs" class="org.dcache.nfs.vfs.VfsCache">
        <description>VFS Cache</description>
        <constructor-arg ref="vfs-intern"/>
	<constructor-arg ref="cache-config"/>
    </bean>

    <bean id="export" class="org.dcache.nfs.ExportFile">
        <description>Export file</description>
        <constructor-arg>
            <bean class="java.io.File">
                <constructor-arg value="exports"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="export-init" class="org.dcache.nfs.ExportPathCreator" init-method="init">
        <property name="vfs" ref="vfs-intern"/>
        <property name="exportFile" ref="export" />
    </bean>

    <!--
        NFSv4.1 Operation factory
    -->
    <bean id="mds-factory-inner" class="org.dcache.nfs.v4.LocalIoOperationFactory">
        <description>MDS operation factory</description>
        <constructor-arg ref="ds-data-pool" />
    </bean>
    <bean id="mds-factory" class="org.dcache.nfs.v4.OperationFactoryMXBeanImpl">
        <description>MDS operation factory JMX wrapper</description>
        <constructor-arg ref="mds-factory-inner"/>
        <constructor-arg value="mds"/>
    </bean>

    <!-- create data directory for DS -->
    <bean id="ds-data-dir" class="java.io.File" init-method="mkdirs">
        <constructor-arg value="${ds.base}" />
    </bean>

    <bean id="ds-data-pool" class="org.dcache.nfs.vfs.FsCache" init-method="init">
        <property name="base" ref="ds-data-dir" />
        <property name="maxSize" value="1024" />
        <property name="lastAccess" value="30" />
    </bean>

    <!--
        NFSv4.1 Operation factory
    -->
    <bean id="ds-factory" class="org.dcache.nfs.v4.ds.DSOperationFactory"
        depends-on="ds-data-pool">
        <description>DS operation factory</description>
        <constructor-arg ref="ds-data-pool" />
    </bean>

    <bean id="idmapd" class="org.dcache.nfs.v4.SimpleIdMap" />

    <!--
       NFSv4.1 MDS LMM vfs to vfs-intern
    -->
    <bean id="mds" class="org.dcache.nfs.v4.NFSServerV41" depends-on="export-init">
        <description>NFSv4.1 MDS server</description>
        <constructor-arg ref="mds-factory"/>
        <constructor-arg ref="device-manager" />
        <constructor-arg ref="vfs-intern" />
        <constructor-arg ref="export" />
    </bean>

    <!--
       NFSv4.1 DS LMM vfs to vfs-intern
    -->
    <bean id="ds" class="org.dcache.nfs.v4.NFSServerV41">
        <description>NFSv4.1 DS server</description>
        <constructor-arg ref="ds-factory"/>
        <constructor-arg ref="device-manager" />
        <constructor-arg ref="vfs-intern" />
        <constructor-arg ref="export" />
    </bean>
    <!--
        MOUNTD server vfs to vfs-intern
    -->
    <bean id="mountd" class="org.dcache.nfs.v3.MountServer">
        <description>Mountd seriver</description>
        <constructor-arg ref="export" />
        <constructor-arg ref="vfs-intern" />
    </bean>

    <!--
        Embeded RPCBIND.

        It will autodetect if there a system one already enabled.
    -->
    <bean id="rpcbind" class="org.dcache.xdr.portmap.OncRpcEmbeddedPortmap" />

    <!-- NFSv4 programm -->
    <bean id="nfsv4-programm" class="org.dcache.xdr.OncRpcProgram">
        <description>NFSv4.1 programm number</description>
        <constructor-arg index="0" value="100003" />
        <constructor-arg index="1" value="4" />
    </bean>

    <!-- NFSv3 programm -->
    <bean id="nfsv3-programm" class="org.dcache.xdr.OncRpcProgram">
        <description>NFSv3 programm number</description>
        <constructor-arg index="0" value="100003" />
        <constructor-arg index="1" value="3" />
    </bean>

    <!-- mount programm -->
    <bean id="mount-programm" class="org.dcache.xdr.OncRpcProgram">
        <description>Mount programm number</description>
        <constructor-arg index="0" value="100005" />
        <constructor-arg index="1" value="3" />
    </bean>

    <!--
       NFSv3 vfs to vfs-intern
    -->
    <bean id="nfs3" class="org.dcache.nfs.v3.NfsServerV3">
        <description>NFSv3 server</description>
        <constructor-arg ref="vfs-intern" />
        <constructor-arg ref="export" />
    </bean>

    <!--
        ONC RPC service
    -->
    <bean id="oncrpcsvc-builder" class="org.dcache.xdr.OncRpcSvcFactoryBean">
        <description>Onc RPC service builder for MDS</description>
        <property name="port" value="${mds.port}"/>
        <property name="useTCP" value="true"/>
        <property name="autoPublish" value="true"/>
        <property name="enableJmx" value="true"/>
        <property name="useWorkerPool" value="true"/>
    </bean>

    <bean id="oncrpcsvc" class="org.dcache.xdr.OncRpcSvc" depends-on="rpcbind,oncrpcsvc-ds"
          destroy-method="stop">
        <description>Onc RPC service for MDS</description>
        <constructor-arg ref="oncrpcsvc-builder"/>
        <property name="programs">
            <map>
                <entry key-ref="nfsv4-programm" value-ref="mds"/>
                <entry key-ref="nfsv3-programm" value-ref="nfs3"/>
                <entry key-ref="mount-programm" value-ref="mountd"/>
            </map>
        </property>
    </bean>

    <!--
        ONC RPC service for DS
    -->
    <bean id="oncrpcsvc-ds-builder" class="org.dcache.xdr.OncRpcSvcFactoryBean">
        <description>Onc RPC service builder for DS</description>
        <property name="port" value="${ds.port}"/>
        <property name="useTCP" value="true"/>
        <property name="enableJmx" value="true"/>
        <property name="useWorkerPool" value="true"/>
    </bean>

    <bean id="oncrpcsvc-ds" class="org.dcache.xdr.OncRpcSvc"
          init-method="start" destroy-method="stop">
        <description>Onc RPC service for DS</description>
        <constructor-arg ref="oncrpcsvc-ds-builder"/>
        <property name="programs">
            <map>
                <entry key-ref="nfsv4-programm" value-ref="ds"/>
            </map>
        </property>
    </bean>

</beans>
